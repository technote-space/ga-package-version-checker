/**
 * Logger
 */
export default class Logger {
    private readonly replacer;
    private static isRequiredEndGroup;
    /**
     * @param {function|undefined} replacer replacer
     */
    constructor(replacer?: (string: string) => string);
    /**
     * @param {string} message message
     * @return {string[]} message
     */
    private splitMessage;
    private getOutputString;
    private multiLineOutput;
    log: (message: string | string[], ...args: any[]) => void;
    info: (message: string | string[], ...args: any[]) => void;
    debug: (message: string | string[], ...args: any[]) => void;
    error: (message: string | string[], ...args: any[]) => void;
    warn: (message: string | string[], ...args: any[]) => void;
    displayCommand: (message: string | string[], ...args: any[]) => void;
    displayStdout: (message: string | string[]) => void;
    displayStderr: (message: string | string[]) => void;
    startProcess: (message: string, ...args: any[]) => void;
    endProcess: () => void;
    static resetForTesting: () => void;
}
