import { Logger } from './index';
/**
 * Command
 */
export default class Command {
    private logger;
    /**
     * @param {Logger} logger logger
     */
    constructor(logger: Logger);
    /**
     * @param {string} command command
     * @param {boolean} quiet quiet?
     * @param {boolean} suppressError suppress error?
     * @return {string} command
     */
    private getCommand;
    /**
     * @param {string} command command
     * @param {string} altCommand alt command
     * @param {boolean} quiet quiet?
     * @param {ExecException} error error
     * @return {string} message
     */
    private getRejectedErrorMessage;
    /**
     * @param {string} command command
     * @param {string|undefined} altCommand alt command
     * @param {boolean} quiet quiet?
     * @param {boolean} suppressOutput suppress output?
     * @param {function} resolve resolve
     * @param {function} reject reject
     * @return {void} void
     */
    private execCallback;
    /**
     * @param {object} args args
     * @param {string} args.command command
     * @param {string|undefined} args.cwd cwd
     * @param {boolean|undefined} args.quiet quiet?
     * @param {string|undefined} args.altCommand alt command
     * @param {boolean|undefined} args.suppressError suppress error?
     * @param {boolean|undefined} args.suppressOutput suppress output?
     * @return {Promise<string>} output
     */
    execAsync: (args: {
        command: string;
        cwd?: string | undefined;
        quiet?: boolean | undefined;
        altCommand?: string | undefined;
        suppressError?: boolean | undefined;
        suppressOutput?: boolean | undefined;
    }) => Promise<string>;
}
